% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/overlay_functions.R
\name{count_points}
\alias{count_points}
\title{Count points within each hexagon in a lattice}
\usage{
count_points(h, pts, output = c("shapes", "simple", "clone"))
}
\arguments{
\item{h}{Lattice of hexagons; an object of class \code{hexlattice}
as produced by \code{\link{make_hexagons}}.}

\item{pts}{Point locations. This can either be a spatial data frame
(\code{sf} object) or a two-column matrix or data frame of point
coordinates.}

\item{output}{One of 'shapes', 'simple' or 'clone' (may be abbreviated). If
'shapes' (the default), a spatial data frame is returned that is a copy of
that in the input \code{hexlattice} object with an 'npoints' column added.
If 'simple', a plain data frame is returned with columns for hexagon ID
(integer) and number of points. If 'clone' a copy of the input
\code{hexlattice} object is returned, with an 'npoints' column added to its
'shapes' data frame.}
}
\value{
Depending on the 'output' argument: either a spatial data frame
  (output = 'shapes'), a plain data frame of hexagon IDs and point counts
  (output = 'simple'), or a copy of the input \code{hexlattice} object with
  point counts added to its 'shapes' spatial data frame.
}
\description{
Given a lattice of hexagons and a set of points, this function counts how
many points lie within each hexagon. The lattice should be a spatial data
frame (\code{sf} object) while the point locations can be a spatial data
frame or a two-column matrix or plain data frame. If points are provided as a
spatial data frame, the function checks whether the coordinate reference
system matches that of the hexagons. If either layer does not have a
reference system defined this check is skipped, ie. point and hexagon
coordinates are assumed to be comparable.
}
